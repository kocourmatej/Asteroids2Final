<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShopBar1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (a = 1 a&lt; 7 a++)
    {
     rocket_names[a] = "Nameless"
     rocket_desc[a] = "No description available"
    }

rocket_names[1] = "Delta 0100"
rocket_names[2] =  "Challenger"
rocket_names[3] =  "Titan 1"
 

rocket_desc[1] = "Basic ship of ally army, ideal for scouting enemy. Lack of firepower and shield capacity but still the basic, the best."
 


image_speed = 0;
selected = 0;

alpha = 0
xs = 1
ys = 1
mouse_in = 0;
selected_alpha = 0;
ship_selected = 0;
button_aplha = 0;

ship_pan = 1;
ship_angle = 0;

start_alpha = 0;
start_alpha2 = 0;
start_selected = 0;
xs2 = 1;
ys2 = 1;
start_button_alpha = 0;

battle_text[0] = "Campaign"
battle_text[1] = "Free travel"

cur_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((distance_to_point(mouse_x,mouse_y) = 0 &amp;&amp; mouse_in = 0) || selected = 1)
   {
    if (alpha &lt; 1)
       {
        alpha += 0.05
       }
    if (xs &lt; 1.15)
       {
        xs += 0.02
        ys = xs
       }
       
   }
   else 
   
        {
        alpha = 0
         if (xs &gt; 1)
            {
             xs -= 0.02
             ys = xs
            }
        
        }
        
   
if (mouse_check_button_pressed(mb_left) &amp;&amp; distance_to_point(mouse_x,mouse_y) = 0)
   {
    selected = !selected
    start_selected = 0;
    if (selected = 0)
       {
         mouse_in = 1
         selected = 0;
         xs = 1
         ys = 1
         mouse_in = 0;
         selected_alpha = 0;
         ship_selected = 0;
         button_aplha = 0;

       }
   }
   if (distance_to_point(mouse_x,mouse_y) &gt; 0 &amp;&amp; mouse_in = 1)
      {
       mouse_in = 0;
      }
      if (selected = 1)
         {
          if (selected_alpha &lt; 1)
             {
              selected_alpha += 0.05
             }
         
         }
         else {selected_alpha = 0}
         
if (ship_selected != 0)
   {
    if (button_alpha &lt; 1)
       {
        button_alpha += 0.05
       }
   }
   else {button_alpha = 0}
   
   
   if ( (mouse_x &gt; x+256 &amp;&amp; mouse_x &lt; x+512 &amp;&amp; mouse_y&gt; y-32 &amp;&amp; mouse_y&lt;y+64-32 &amp;&amp; selected = 0) )
      {
      
       if (mouse_check_button_pressed(mb_left))
       {
       start_selected = !start_selected
       selected = 0;
       }
       if (start_alpha &lt; 1)
          {
           start_alpha += 0.05
           
          }
          if (xs2 &lt; 1.2)
             {
              xs2 += 0.02
              ys2 = xs2

             }
      }
       else {if (start_alpha &gt; 0) {start_alpha-= 0.05 } if (xs2&gt;1) {xs2 -= 0.02 ys2 = xs2}}

if  (selected = 0 &amp;&amp; start_selected = 1)
    {
     if (start_alpha &lt; 1)
          {
           start_alpha += 0.05
           
          }
          if (xs2 &lt; 1.2)
             {
              xs2 += 0.02
              ys2 = xs2

             }

    }
     
      
      if (start_selected = 1)
         {
          if (start_alpha2 &lt; 1)
             {
              start_alpha2 += 0.05
             }
         }
         else {start_alpha2 = 0}
   

   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_color(c_black)
draw_set_font(fntArial)


 
  

   
if (selected = 0)
   {
    draw_sprite(sShopBar6,0,x+256+128,y)
    draw_set_alpha(start_alpha)
     draw_sprite(sShopBar6,1,x+256+128,y)
    draw_set_alpha(1)
    draw_set_halign(fa_center)
   draw_set_valign(fa_middle)

     draw_text_ext_transformed(x+256+128,y,"Start battle",15,360,xs2,ys2,0)
 draw_set_halign(fa_left)
    draw_set_valign(fa_top)

    
    if (start_selected = 1)
       {
        sdx = x
        sdy = y
        syset = 0 
        soffset = 5  
        
        draw_set_alpha(start_alpha2)
        for (a = 0 a&lt;2 a++)
            {
             sdy += 64
             syset += 2
             if (start_alpha2 &gt; a/10 +0.4)
             {
                 draw_sprite(sShopBar6,0,x+256+128,y+(a*64)+soffset+syset+64)
                  draw_set_halign(fa_center)
                  draw_set_valign(fa_middle)

                 draw_text(x+256+128,y+(a*64)+soffset+syset+64,battle_text[a])
                 if (a = 0)
                 {
                 ini_open("data.asteroids2")
                   level= ini_read_real("var","campaign",1)
                draw_text(x+256+128,y+(a*64)+soffset+syset+64+16,"Chapter: "+string(level))
                   ini_close()
                 }
                  draw_set_halign(fa_left)
                  draw_set_valign(fa_top)
    
            if  (mouse_x &gt; x+256 &amp;&amp; mouse_x &lt; x+512 &amp;&amp; mouse_y&gt; y+(a*64)+soffset+syset+32 &amp;&amp; mouse_y&lt;y+(a*64)+soffset+syset+64+32)
               {
               cur_y = y+(a*64)+soffset+syset+32
               if (start_button_alpha &lt;1)
                  {
                   start_button_alpha += 0.05
                  }
                draw_set_alpha(start_button_alpha)  
                draw_sprite(sShopBar6,1,x+256+128,y+(a*64)+soffset+syset+64)
               
                
                draw_set_alpha(1)
               }
                
             

           if (mouse_y &gt; cur_y-63 || mouse_y &lt; cur_y -64)
              {
              //start_button_alpha = 0;
              }   

             }
            }
            
            
           if (mouse_check_button_pressed(mb_left) &amp;&amp; mouse_x &gt; x+256&amp;&amp; mouse_x &lt; x+256+256 &amp;&amp; mouse_y &gt;y+32 &amp;&amp; mouse_y&lt;y+32+64)
                   {
                   ini_open("data.asteroids2")
                   level= ini_read_real("var","campaign",1)
                  switch(level)
                  {
                   case 1: room = mapLevel1 break;
                   case 2: room = mapLevel2 break;
                   case 3: room = mapLevel3 break;

                  }
                   ini_close()
                   }

        
        draw_set_alpha(1) 

       }
   }
    draw_set_alpha(alpha)

if (distance_to_point(mouse_x,mouse_y) = 0 || selected = 1)
   {
    draw_sprite(sprite_index,1,x,y)
   }

   draw_set_halign(fa_center)
   draw_set_valign(fa_middle)

draw_set_alpha(1)
 draw_text_ext_transformed(x,y,"Choose rocket",15,360,xs,ys,0)

 draw_set_halign(fa_left)
    draw_set_valign(fa_top)

    dx = x
    dy = y
    yset = 0 
    offset = 5   
if (alpha &gt; 0.2 &amp;&amp; selected = 1)
   {
   draw_set_alpha(selected_alpha)
    for (a = 0 a&lt;6 a++)
        {
        if (selected_alpha &gt; (a/10)+0.1)
        {
         dy += 64
         yset += 2;
         draw_sprite(sprite_index,0,dx,dy+offset+yset)
         }
        }
   }
   draw_set_alpha(1)
   yset = 0 

   for (a = 1 a&lt;7 a++)
       {
       yset += 2
        if (mouse_x &gt;= x &amp;&amp; mouse_x &lt;= x+256-32 &amp;&amp; mouse_y&gt;y+(a*64)+offset+yset-32 &amp;&amp; mouse_y &lt;y +(a*64+64+offset+yset-32) &amp;&amp; ship_selected != a &amp;&amp; selected = 1)
           {
            draw_sprite(sprite_index,1,x,y+(a*64)+offset+yset)
            if (mouse_check_button_pressed(mb_left))
               {
                if (ship_selected = 0)
                   {
                    ship_selected = a
                    ini_open("data.asteroids2")
                    ini_write_real("var","rocket",a)
                    ini_close()
                   }
                   else {ship_selected = 0}
               }
           }
           if (ship_selected != 0 &amp;&amp; a = ship_selected)
              {
              draw_set_alpha(button_alpha)
               draw_sprite(sprite_index,1,x,y+(ship_selected*64)+offset+yset)
               draw_set_alpha(1)
              }
         
            if (selected = 1 &amp;&amp; alpha &gt; 0.2)
            {
            draw_set_halign(fa_center)
            draw_set_valign(fa_middle)
           draw_set_alpha(selected_alpha)
           if (selected_alpha &gt; a/10)
           {
         draw_text(x,y+(a*64)+offset+yset,rocket_names[a])
         }
            draw_set_alpha(1)
         
         draw_set_halign(fa_left)
         draw_set_valign(fa_top)
           } 

       }
       if (ship_selected != 0)
          {
          draw_set_alpha(button_alpha)
           draw_sprite(sShopBar2,0,x+256+64,y)
        

             draw_set_halign(fa_center)
            draw_set_valign(fa_middle)

           draw_text(x+256+64,y,"Ship selected: "+string(rocket_names[ship_selected]))
             draw_set_halign(fa_left)
         draw_set_valign(fa_top)
         draw_sprite(sShopBar3,0,x+256+64,y+256-16)
            draw_text_ext(x+132,y+48,rocket_desc[ship_selected],12,640-260)
            scrEffectRocketTrailShop(1,x+256+64+16,y+128-16)
           draw_sprite_ext(sPlayer,ship_selected+1,x+256+64+16,y+128-16,ship_pan,ship_pan,ship_angle,c_white,button_alpha)
           
           if (mouse_wheel_up())
              {
               if (ship_pan &lt; 3)
                  {
                   ship_pan += 0.2
                  }
              }
            if (mouse_wheel_down())
              {
               if (ship_pan &gt; 0.5)
                  {
                   ship_pan -= 0.2
                  }
              }

              if (mouse_check_button(mb_right))
              {      
              ship_angle = point_direction(x+256+64+16,y+128-16,mouse_x,mouse_y)
              }
   
     
           ini_open("data.asteroids2")
            for (a = 1 a&lt;9 a++)
                {
                level_health[a] = 1;
                }   
                
             //Read ini:   
             
             //Ship1
            level_health[1] = ini_read_real("shop","level_health[1]",1)
            level_health_real[1] = level_health[1]*10+100
            level_health_cost[1] =  level_health[1]*100;
            
            level_shield[1] = ini_read_real("shop","level_shield[1]",1)
            level_shield_real[1] = level_shield[1]*3+20
            level_shield_cost[1] =  level_shield[1]*60;
            
            level_damage[1] = ini_read_real("shop","level_damage[1]",1)
            level_damage_real[1] = level_damage[1]*0.12+1
            level_damage_cost[1] =  level_damage[1]*120;


             //Ship2
            level_health[2] = ini_read_real("shop","level_health[2]",1) 
            level_health_real[2] = level_health[2]*12+80          
            level_health_cost[2] =  round((level_health[2]*100)*log10(level_health[2])+350);
            
            
            level_shield[2] = ini_read_real("shop","level_shield[2]",1) 
            level_shield_real[2] = level_shield[2]*4+20          
            level_shield_cost[2] =  round((level_shield[2]*100)*log2(level_shield[2])+150);
            
            level_damage[2] = ini_read_real("shop","level_damage[2]",1) 
            level_damage_real[2] = level_damage[2]*0.22+1.5          
            level_damage_cost[2] =  round((level_damage[2]*100)*log2(level_damage[2])+400);


            
            //Global var
            money = ini_read_real("var","money",0) 
             
            // Draw vars:
            
            draw_sprite(sShopBar4,0,x+132,y+256-64-16+32)           
            draw_sprite(sShopBar4,0,x+132,y+256-64-16+32+64)
            draw_sprite(sShopBar4,0,x+132,y+256-64-16+32+128)

             
            draw_sprite(sShopBar5,0,x+132+258,y+256-64-16+32)            
            draw_sprite(sShopBar5,0,x+132+258,y+256-64-16+32+64)
            draw_sprite(sShopBar5,0,x+132+258,y+256-64-16+32+128)
            
            
             draw_text(x+132,y+128+64,"Health: "+string(level_health_real[ship_selected]))
             draw_text(x+132,y+128+128,"Shield: "+string(level_shield_real[ship_selected]))
             draw_text(x+132,y+128+192,"Damage: "+string(level_damage_real[ship_selected]))


            for (a = 0 a&lt;3 a++)
                {
                 if (mouse_x &gt; x+132+258+64 &amp;&amp; mouse_x &lt; x +132+258+96 &amp;&amp; mouse_y &gt;y+256-64-16+32+64*a &amp;&amp; mouse_y&lt;y+256-64+16+32+64*a)
                    {
                    draw_sprite(sShopBar5,1,x+132+258,y+256-64-16+32+(a*64))
                    if (mouse_check_button_pressed(mb_left)) 
                       {
                       //a = 0
                       
                        if (a = 0) 
                           {
                           if (level_health[ship_selected] &lt; 8)
                              {
                               if (money &gt;=  level_health_cost[ship_selected])
                                  {
                                   money -= level_health_cost[ship_selected]
                                   level_health[ship_selected] += 1;
                                   ini_write_real("var","money",money)
                                   ini_write_real("shop","level_health["+string(ship_selected)+string("]"), level_health[ship_selected])           
                                  }
                              }
                           
                           }
                       //a = 1
                       
                        if (a = 1) 
                           {
                           if (level_shield[ship_selected] &lt; 8)
                              {
                               if (money &gt;=  level_shield_cost[ship_selected])
                                  {
                                   money -= level_shield_cost[ship_selected]
                                   level_shield[ship_selected] += 1;
                                   ini_write_real("var","money",money)
                                   ini_write_real("shop","level_shield["+string(ship_selected)+string("]"), level_shield[ship_selected])           
                                  }
                              }
                           
                           }
                        //a = 2
                       
                        if (a = 2) 
                           {
                           if (level_damage[ship_selected] &lt; 8)
                              {
                               if (money &gt;=  level_damage_cost[ship_selected])
                                  {
                                   money -= level_damage_cost[ship_selected]
                                   level_damage[ship_selected] += 1;
                                   ini_write_real("var","money",money)
                                   ini_write_real("shop","level_damage["+string(ship_selected)+string("]"), level_damage[ship_selected])           
                                  }
                              }
                           
                           }

                           
                           //     /mouse_check_button_pressed(mb_left)
                       }
                    } 
                }
            draw_text(x+132+258,y+256-64+16,"Cost: #"+string( level_health_cost[ship_selected])+string("$"))
            draw_text(x+132+258,y+256-64+16+64,"Cost: #"+string( level_shield_cost[ship_selected])+string("$"))
            draw_text(x+132+258,y+256-64+16+128,"Cost: #"+string( level_damage_cost[ship_selected])+string("$"))


            
            
            
            draw_text(x+145,y+256-64-32+256,"Money: "+string(round(money)))
            ini_close()
            for (a = 0 a&lt;8 a++)
               {
               if (level_health[ship_selected] &gt; a)
                  { 
                  draw_sprite(sShopBar4,1,x+132+a*32,y+256-64-16+32)
                  }
                  
                if (level_shield[ship_selected] &gt; a)
                  { 
                  draw_sprite(sShopBar4,1,x+132+a*32,y+256-64-16+32+64)
                  }
                  
                 if (level_damage[ship_selected] &gt; a)
                  { 
                  draw_sprite(sShopBar4,1,x+132+a*32,y+256-64-16+32+128)
                  }


               }
            draw_set_alpha(1)
           
           
            }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,32</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
