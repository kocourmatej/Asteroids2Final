<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShopBar1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (a = 1 a&lt; 7 a++)
    {
     rocket_names[a] = "Nameless"
    }

rocket_names[1] = "Delta 0100"
rocket_names[2] =  "challenger"
 
 


image_speed = 0;
selected = 0;
alpha = 0
xs = 1
ys = 1
mouse_in = 0;
selected_alpha = 0;
ship_selected = 0;
button_aplha = 0;

ship_pan = 1;
ship_angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((distance_to_point(mouse_x,mouse_y) = 0 &amp;&amp; mouse_in = 0) || selected = 1)
   {
    if (alpha &lt; 1)
       {
        alpha += 0.05
       }
    if (xs &lt; 1.15)
       {
        xs += 0.02
        ys = xs
       }
       
   }
   else 
   
        {
        alpha = 0
         if (xs &gt; 1)
            {
             xs -= 0.02
             ys = xs
            }
        
        }
        
   
if (mouse_check_button_pressed(mb_left) &amp;&amp; distance_to_point(mouse_x,mouse_y) = 0)
   {
    selected = !selected
    if (selected = 0)
       {
         mouse_in = 1
         selected = 0;
         xs = 1
         ys = 1
         mouse_in = 0;
         selected_alpha = 0;
         ship_selected = 0;
         button_aplha = 0;

       }
   }
   if (distance_to_point(mouse_x,mouse_y) &gt; 0 &amp;&amp; mouse_in = 1)
      {
       mouse_in = 0;
      }
      if (selected = 1)
         {
          if (selected_alpha &lt; 1)
             {
              selected_alpha += 0.05
             }
         
         }
         else {selected_alpha = 0}
         
if (ship_selected != 0)
   {
    if (button_alpha &lt; 1)
       {
        button_alpha += 0.05
       }
   }
   else {button_alpha = 0}
   

   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_color(c_black)



    draw_set_halign(fa_center)
   draw_set_valign(fa_middle)
  

    draw_set_alpha(alpha)

if (distance_to_point(mouse_x,mouse_y) = 0 || selected = 1)
   {
    draw_sprite(sprite_index,1,x,y)
   }


draw_set_alpha(1)
 draw_text_ext_transformed(x,y,"Choose rocket",15,128,xs,ys,0)

 draw_set_halign(fa_left)
    draw_set_valign(fa_top)

    dx = x
    dy = y
    yset = 0 
    offset = 5   
if (alpha &gt; 0.2 &amp;&amp; selected = 1)
   {
   draw_set_alpha(selected_alpha)
    for (a = 0 a&lt;6 a++)
        {
        if (selected_alpha &gt; (a/10)+0.1)
        {
         dy += 64
         yset += 2;
         draw_sprite(sprite_index,0,dx,dy+offset+yset)
         }
        }
   }
   draw_set_alpha(1)
   yset = 0 

   for (a = 1 a&lt;7 a++)
       {
       yset += 2
        if (mouse_x &gt;= x &amp;&amp; mouse_x &lt;= x+256-32 &amp;&amp; mouse_y&gt;y+(a*64)+offset+yset-32 &amp;&amp; mouse_y &lt;y +(a*64+64+offset+yset-32) &amp;&amp; ship_selected != a &amp;&amp; selected = 1)
           {
            draw_sprite(sprite_index,1,x,y+(a*64)+offset+yset)
            if (mouse_check_button_pressed(mb_left))
               {
                if (ship_selected = 0)
                   {
                    ship_selected = a
                   }
                   else {ship_selected = 0}
               }
           }
           if (ship_selected != 0 &amp;&amp; a = ship_selected)
              {
              draw_set_alpha(button_alpha)
               draw_sprite(sprite_index,1,x,y+(ship_selected*64)+offset+yset)
               draw_set_alpha(1)
              }
         
            if (selected = 1 &amp;&amp; alpha &gt; 0.2)
            {
            draw_set_halign(fa_center)
            draw_set_valign(fa_middle)
           draw_set_alpha(selected_alpha)
           if (selected_alpha &gt; a/10)
           {
         draw_text(x,y+(a*64)+offset+yset,rocket_names[a])
         }
            draw_set_alpha(1)
         
         draw_set_halign(fa_left)
         draw_set_valign(fa_top)
           } 

       }
       if (ship_selected != 0)
          {
          draw_set_alpha(button_alpha)
           draw_sprite(sShopBar2,0,x+256+64,y)
             draw_set_halign(fa_center)
            draw_set_valign(fa_middle)

           draw_text(x+256+64,y,"Ship selected: "+string(rocket_names[ship_selected]))
             draw_set_halign(fa_left)
         draw_set_valign(fa_top)
         draw_sprite(sShopBar3,0,x+256+64,y+256-16)
           draw_sprite_ext(sPlayer,ship_selected-1,x+256+64+16,y+128-16,ship_pan,ship_pan,ship_angle,c_white,button_alpha)
           
           if (mouse_wheel_up())
              {
               if (ship_pan &lt; 3)
                  {
                   ship_pan += 0.2
                  }
              }
            if (mouse_wheel_down())
              {
               if (ship_pan &gt; 0.5)
                  {
                   ship_pan -= 0.2
                  }
              }

              if (mouse_check_button(mb_right))
              {      
              ship_angle = point_direction(x+256+64+16,y+128-16,mouse_x,mouse_y)
              }
   
     
           ini_open("data.asteroids2")
           for (a = 1 a&lt;7 a++)
           {
            level_health[a] = ini_read_real("vars","level_health["+string(a)+string("]"),1)
           
           }
           draw_sprite(sShopBar4,0,x+132,y+256-64-16)
           for (a = 0 a&lt;8 a++)
               {
               if (level_health[ship_selected] &gt; a)
               { 
                draw_sprite(sShopBar4,1,x+256+128+a*32,y)
                }
               }
           draw_set_alpha(1)
           
           
          }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,32</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
